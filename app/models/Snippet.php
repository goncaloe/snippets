<?php

namespace app\models;

use Yii;
use yii\helpers\FileHelper;
use yii\db\Query;

/**
 * This is the model class for table "snippets".
 *
 * @property string $id
 * @property string $name
 * @property string $framework
 * @property int $created_at
 */
class Snippet extends \yii\db\ActiveRecord
{

    public $html;
    public $js;
    public $css;

    public $tags;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'snippets';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['id'], 'required'],
            [['created_at'], 'integer'],
            [['id'], 'string', 'min' => 5, 'max' => 32],
            [['name'], 'string', 'max' => 128],
            [['framework'], 'string', 'max' => 24],
            [['tags'], 'string'],
            [['id'], 'unique'],
            [['js', 'css'], 'boolean'],
            [['createdAtText'], 'date', 'format' => 'dd-mm-yyyy'],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Name',
            'framework' => 'Framework',
            'createdAtText' => 'Created At',
            'css' => 'Use Css File',
            'js' => 'Use Javascript File',
        ];
    }


    public function setCreatedAtText($value)
    {
        if(empty($value)) {
            $this->created_at = 0;
        }
        else {
            $date = date_create_from_format('d-m-Y', $value);
            if($date){
                $this->created_at = $date->getTimestamp();
            }
        }
    }

    public function getCreatedAtText()
    {
        if($this->created_at){
            return date('d-m-Y', $this->created_at);
        }
        return '';
    }

    public function frameworkOptions()
    {
        return [
            'bs3' => 'Bootstrap 3',
            'bs4' => 'Bootstrap 4',
        ];
    }

    public function afterFind()
    {
        $snippetsManager = Yii::$app->getSnippets();
        $snippetPath = $snippetsManager->basePath.'/'.$this->id;

        $this->css = file_exists($snippetPath . '/index.css');
        $this->js = file_exists($snippetPath . '/index.js');

        $sTags = (new Query())
            ->select(['tag_id'])
            ->from('snippet_tags')
            ->where(['snippet_id' => $this->id])
            ->column(self::getDb());
        if($sTags){
            $this->tags = implode(', ', $sTags);
        }

        parent::afterFind();
    }


    public function afterSave($insert, $changedAttributes)
    {
        $snippetsManager = Yii::$app->getSnippets();
        $snippetPath = $snippetsManager->basePath.'/'.$this->id;
        if(!is_dir($snippetPath)) {
            mkdir($snippetPath);
        }

        file_put_contents($snippetPath . '/index.html', "<!-- File generated by snippets app -->\n");

        if($tags = trim($this->tags)){
            $tags = preg_replace('/\s+/', ' ', $tags);
            $tags = strtolower($tags);
            $tags = preg_split('/\s*[,;]\s*/', $tags, NULL, PREG_SPLIT_NO_EMPTY);
        }
        else {
            $tags = [];
        }

        $json = [
            'name' => $this->name,
            'tags' => $tags,
            'date' => $this->getCreatedAtText(),
            'framework' => $this->framework
        ];
        file_put_contents($snippetPath . '/snippet.json', json_encode($json, JSON_PRETTY_PRINT));

        if($insert){
            if($this->css){
                file_put_contents($snippetPath . '/index.css', "/* css file */\n");
            }
            if($this->js){
                file_put_contents($snippetPath . '/index.js', "/* javascript file */\n");
            }

            foreach($tags as $tag){
                self::getDb()->createCommand()->insert('snippet_tags', [
                    'snippet_id' => $this->id,
                    'tag_id' => $tag,
                ])->execute();
            }

        }
        else {
            $cssFile = $snippetPath . '/index.css';
            $cssExists = file_exists($cssFile);
            if($this->css && !$cssExists){
                file_put_contents($cssFile, "/* css file */\n");
            }
            elseif(!$this->css && $cssExists) {
                unlink($cssFile);
            }

            $jsFile = $snippetPath . '/index.js';
            $jsExists = file_exists($jsFile);
            if($this->js && !$jsExists){
                file_put_contents($snippetPath . '/index.js', "/* javascript file */\n");
            }
            elseif(!$this->js && $jsExists) {
                unlink($jsFile);
            }


            $sTags = (new Query())
                ->select(['tag_id'])
                ->from('snippet_tags')
                ->where(['snippet_id' => $this->id])
                ->column(self::getDb());

            foreach($tags as $tag) {
                if (!in_array($tag, $sTags)) {
                    self::getDb()->createCommand()->insert('snippet_tags', [
                        'snippet_id' => $this->id,
                        'tag_id' => $tag,
                    ])->execute();
                }
            }

            foreach($sTags as $tag) {
                if (!in_array($tag, $tags)) {
                    self::getDb()->createCommand()->delete('snippet_tags', [
                        'snippet_id' => $this->id,
                        'tag_id' => $tag,
                    ])->execute();
                }
            }
        }

        parent::afterSave($insert, $changedAttributes);
    }

    public function afterDelete()
    {
        $snippetsManager = Yii::$app->getSnippets();
        $snippetPath = $snippetsManager->basePath.'/'.$this->id;
        if(is_dir($snippetPath)) {
            FileHelper::removeDirectory($snippetPath);
        }

        self::getDb()->createCommand()->delete('snippet_tags', ['snippet_id' => $this->id])->execute();

        parent::afterDelete();
    }
}
